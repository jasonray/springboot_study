plugins {
    id 'groovy'
    id 'java'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    version = '1.0'
}
import example.PropertyUpdaterTask
// NOTE: the task name does not matter, there must be one method annotated with @TaskAction in the task definition class

ext { 
  buildFile = null
  filePath = null
}
task getBuildFile {
  def variable = (project.hasProperty('special')) ? true: false
  if (variable) {
    rootProject.ext.buildFile = 'special.properties'
    rootProject.ext.filePath = 'buildSrc/src/main/resources'
    println 'getBuildFile variable = ' + variable
  } else {
    rootProject.ext.buildFile = 'application.properties.custom'
    rootProject.ext.filePath = 'buildSrc/src/main/resources'
    println 'getBuildFile variable = ' +variable
  }
}


task updateApplicationProperties(type : PropertyUpdaterTask) {
    syntax 'java'
    fileName = 'application.properties'
    // NOTE: missing /empty filePath currently is not handled well
    filePath 'buildSrc/src/main/resources'
    commandline 'name1=https://www.google.com name2=admin name3=42 name4=""'
}
task updateUdeployProperties(type : PropertyUpdaterTask) {
    // NOTE: one may accidentally affect the other task properties 
    // by referring those in result of an copy-paste development
    // printJavaVersionBuildSrc.syntax = 'udeploy'
    // NOTE:
    // enclosing the property setting in the doLast closure leads to

    // TODO: build error
    // > No value has been specified for property 'fileName'.
    // > No value has been specified for property 'syntax'.
    // regardles of the assignent syntax. 
	/*
    doLast {
	    syntax = 'udeploy'
	    fileName = 'application.yaml'
	    filePath = 'buildSrc/src/main/resources'
	    commandline = 'name1=https://www.yahoo.com name2=user name3=17 name4=""'
    }
    */
    syntax = 'udeploy'
    fileName = 'application.yaml'
    filePath = 'buildSrc/src/main/resources'
    commandline = 'name1=https://www.yahoo.com name2=user name3=17 name4=""'
}
// The following does not work
task updateCustomProperties(type : PropertyUpdaterTask,  dependsOn: 'getBuildFile') {
 
    def variable = rootProject.ext.buildFile 
    println 'updateCustomProperties variable = ' + variable
    if (variable != null) {
        fileName = variable
        println 'used variable'
    } else {
      println 'variable is empty'
      fileName = 'application.properties.custom'
    }
    syntax = 'custom'
    filePath = 'buildSrc/src/main/resources'
    commandline = 'name1=https://www.yahoo.com name2=user name3=17 name4=""'
    doLast {
     updateProperties()
    }
}

